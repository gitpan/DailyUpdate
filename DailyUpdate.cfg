# use perl                                  -*- mode: Perl; -*-

# This is the configuration file for Daily Update. Feel free to modify any of
# the values here.  See
# http://www.cs.virginia.edu/~dwc3q/code/DailyUpdate/index.html
# for more information.

%config = (

# $inputFiles is a list of quoted, comma-separated input files.
# $outputFiles is a list of quoted, comma-separated output files.
# Each input file is transformed by Daily Update into the corresponding output
# file. (i.e. There should be one input file for each output file.)
# Note that only the first will be used when Daily Update is run as a CGI
# program.
'inputFiles' => [],
'outputFiles' => [],

# You can specify one or more directories where Daily Update can find
# handlers.  Note that installed handlers automatically go into the first
# directory.  Specify the directories separated using commas, and quote them.
'handlerlocations' => ["$ENV{HOME}/.DailyUpdate"],

# $socketTimeout is the length of time to allow any particular web service to
# respond.
'socketTimeout' => 60,

# $scripttimeout is the length of time to allow Daily Update to run.
'scriptTimeout' => 240,

# Set $proxy if you use a proxy. For example, "http://proxy.host.com:8080/"
'proxy' => "",

# If you need to supply a username/password to your proxy server, you can
# specify it here.
#
# If you supply a password of '', you will be prompted for a password *if*
# Daily Update is run interactively. If not, the password will default to "",
# which, is almost certainly not what you want.  So, this feature is not very
# useful if you're using this program from "cron".
#
# If you supply a real password here, this password will be used.  If you use
# this option, please make sure that you take appropiate measures to make sure
# that this file can't be read by others.
'proxy_username' => '',
'proxy_password' => '',

# The writers of the handlers set the times at which to refresh data from the
# web. If you are unhappy with these times, you can override them here.
'updatetimes' => {
  # Updates the data for tag1 every time Daily Update is run. (Use very
  #   carefully!)
  # 'tag1' => ['always'],

  # Updates the data for tag2 at 5am, 10am, 12pm, 2pm, 4pm and 9pm.
  # 'tag2' => [5,10,12,14,16,21],

  # Update the data for tag3 at 7am.
  # 'tag3' => [7],
},

);

1;
